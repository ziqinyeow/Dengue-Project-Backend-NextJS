// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
  // previewFeatures = ["referentialIntegrity", "dataProxy"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id       String   @id @default(cuid())
  email    String   @unique
  password String
  token    String?  @db.Text
  fullname String?
  username String?
  ic       String   @unique
  phone_no String?
  address  String?  @db.LongText
  postcode String?
  status   String?
  group    Int?     @default(0) // 0 = normal user, 1 = dengue patient
  detail   Detail[]
  answer   Answer[]
}

// to allow unregistered user to be record as a patient
model Patient {
  id    String @id @default(cuid())
  ic    String @unique
  email String @unique
}

// diagnose history (KIV)
model History {
  id    String    @id @default(cuid())
  ic    String
  start DateTime  @default(now())
  end   DateTime?
}

model Detail {
  id             String   @id @default(cuid())
  createdAt      DateTime @default(now())
  temperature    Decimal?
  blood_pressure Decimal?
  pulse_rate     Decimal?
  hemoglobin     Decimal?
  hematocrit     Decimal?
  white_cell     Decimal?
  platelet       Decimal?
  user           User?    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id        String?

  @@index([user_id])
}

model Question {
  id            String   @id @default(cuid())
  question      String
  answer_scheme String   @db.Text
  explanation   String?  @db.LongText
  answer        Answer[]
}

model Answer {
  id          String   @id @default(cuid())
  answer_date DateTime @default(now())
  answer      String
  question_id String
  question    Question @relation(fields: [question_id], references: [id])
  user_id     String
  user        User     @relation(fields: [user_id], references: [id])

  @@index([question_id, user_id])
}

model Task {
  id          String  @id @default(cuid())
  name        String
  description String? @db.LongText
  priority    Int     @default(0)
}

model News {
  id    String  @id @default(cuid())
  title String
  text  String? @db.LongText
}
